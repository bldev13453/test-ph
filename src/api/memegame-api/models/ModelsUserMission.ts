// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Meme Game
 * Meme Game API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { GormDeletedAt } from "./GormDeletedAt";
import {
  GormDeletedAtFromJSON,
  GormDeletedAtFromJSONTyped,
  GormDeletedAtToJSON,
} from "./GormDeletedAt";
import type { ModelsMissionName } from "./ModelsMissionName";
import {
  ModelsMissionNameFromJSON,
  ModelsMissionNameFromJSONTyped,
  ModelsMissionNameToJSON,
} from "./ModelsMissionName";

/**
 *
 * @export
 * @interface ModelsUserMission
 */
export interface ModelsUserMission {
  /**
   *
   * @type {string}
   * @memberof ModelsUserMission
   */
  completedAt?: string;
  /**
   *
   * @type {string}
   * @memberof ModelsUserMission
   */
  createdAt?: string;
  /**
   *
   * @type {GormDeletedAt}
   * @memberof ModelsUserMission
   */
  deletedAt?: GormDeletedAt;
  /**
   *
   * @type {number}
   * @memberof ModelsUserMission
   */
  id?: number;
  /**
   *
   * @type {ModelsMissionName}
   * @memberof ModelsUserMission
   */
  name?: ModelsMissionName;
  /**
   *
   * @type {number}
   * @memberof ModelsUserMission
   */
  reward?: number;
  /**
   *
   * @type {string}
   * @memberof ModelsUserMission
   */
  updatedAt?: string;
  /**
   *
   * @type {number}
   * @memberof ModelsUserMission
   */
  userId?: number;
}

/**
 * Check if a given object implements the ModelsUserMission interface.
 */
export function instanceOfModelsUserMission(
  value: object,
): value is ModelsUserMission {
  return true;
}

export function ModelsUserMissionFromJSON(json: any): ModelsUserMission {
  return ModelsUserMissionFromJSONTyped(json, false);
}

export function ModelsUserMissionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ModelsUserMission {
  if (json == null) {
    return json;
  }
  return {
    completedAt:
      json["completed_at"] == null ? undefined : json["completed_at"],
    createdAt: json["createdAt"] == null ? undefined : json["createdAt"],
    deletedAt:
      json["deletedAt"] == null
        ? undefined
        : GormDeletedAtFromJSON(json["deletedAt"]),
    id: json["id"] == null ? undefined : json["id"],
    name:
      json["name"] == null
        ? undefined
        : ModelsMissionNameFromJSON(json["name"]),
    reward: json["reward"] == null ? undefined : json["reward"],
    updatedAt: json["updatedAt"] == null ? undefined : json["updatedAt"],
    userId: json["user_id"] == null ? undefined : json["user_id"],
  };
}

export function ModelsUserMissionToJSON(value?: ModelsUserMission | null): any {
  if (value == null) {
    return value;
  }
  return {
    completed_at: value["completedAt"],
    createdAt: value["createdAt"],
    deletedAt: GormDeletedAtToJSON(value["deletedAt"]),
    id: value["id"],
    name: ModelsMissionNameToJSON(value["name"]),
    reward: value["reward"],
    updatedAt: value["updatedAt"],
    user_id: value["userId"],
  };
}
