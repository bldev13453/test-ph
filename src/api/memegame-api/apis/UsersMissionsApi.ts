// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Meme Game
 * Meme Game API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type {
  HttpCreateUserMissionResp,
  HttpGetUserMissionsResp,
} from "../models/index";
import {
  HttpCreateUserMissionRespFromJSON,
  HttpCreateUserMissionRespToJSON,
  HttpGetUserMissionsRespFromJSON,
  HttpGetUserMissionsRespToJSON,
} from "../models/index";

export interface UsersMissionsMissionIdPostRequest {
  missionId: number;
}

/**
 *
 */
export class UsersMissionsApi extends runtime.BaseAPI {
  /**
   * get user missions
   */
  async usersMissionsGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<HttpGetUserMissionsResp>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/users/missions`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      HttpGetUserMissionsRespFromJSON(jsonValue),
    );
  }

  /**
   * get user missions
   */
  async usersMissionsGet(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<HttpGetUserMissionsResp> {
    const response = await this.usersMissionsGetRaw(initOverrides);
    return await response.value();
  }

  /**
   * complete user mission
   */
  async usersMissionsMissionIdPostRaw(
    requestParameters: UsersMissionsMissionIdPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<HttpCreateUserMissionResp>> {
    if (requestParameters["missionId"] == null) {
      throw new runtime.RequiredError(
        "missionId",
        'Required parameter "missionId" was null or undefined when calling usersMissionsMissionIdPost().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/users/missions/{mission_id}`.replace(
          `{${"mission_id"}}`,
          encodeURIComponent(String(requestParameters["missionId"])),
        ),
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      HttpCreateUserMissionRespFromJSON(jsonValue),
    );
  }

  /**
   * complete user mission
   */
  async usersMissionsMissionIdPost(
    requestParameters: UsersMissionsMissionIdPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<HttpCreateUserMissionResp> {
    const response = await this.usersMissionsMissionIdPostRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }
}
